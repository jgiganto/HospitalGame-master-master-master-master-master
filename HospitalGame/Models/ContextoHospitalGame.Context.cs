//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalGame.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ContextoHospitalGame : DbContext
    {
        public ContextoHospitalGame()
            : base("name=ContextoHospitalGame")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<MEJORES> MEJORES { get; set; }
        public DbSet<PACIENTES> PACIENTES { get; set; }
    
        public virtual int INSERTARPACIENTES(Nullable<int> iDPaciente, string nombre, string apellido, Nullable<int> edad, Nullable<int> reloj, Nullable<int> iDEnfermedad, string baja, string eliminado)
        {
            var iDPacienteParameter = iDPaciente.HasValue ?
                new ObjectParameter("IDPaciente", iDPaciente) :
                new ObjectParameter("IDPaciente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var relojParameter = reloj.HasValue ?
                new ObjectParameter("Reloj", reloj) :
                new ObjectParameter("Reloj", typeof(int));
    
            var iDEnfermedadParameter = iDEnfermedad.HasValue ?
                new ObjectParameter("IDEnfermedad", iDEnfermedad) :
                new ObjectParameter("IDEnfermedad", typeof(int));
    
            var bajaParameter = baja != null ?
                new ObjectParameter("Baja", baja) :
                new ObjectParameter("Baja", typeof(string));
    
            var eliminadoParameter = eliminado != null ?
                new ObjectParameter("Eliminado", eliminado) :
                new ObjectParameter("Eliminado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTARPACIENTES", iDPacienteParameter, nombreParameter, apellidoParameter, edadParameter, relojParameter, iDEnfermedadParameter, bajaParameter, eliminadoParameter);
        }
    
        public virtual int INSERTARRANKING(Nullable<int> idUsuario, Nullable<int> puntos, string nombre, string apellidos, string usuario, string pass)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var puntosParameter = puntos.HasValue ?
                new ObjectParameter("Puntos", puntos) :
                new ObjectParameter("Puntos", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTARRANKING", idUsuarioParameter, puntosParameter, nombreParameter, apellidosParameter, usuarioParameter, passParameter);
        }
    }
}
